@page "/portfolio"
@using Portfolio.Model
@inject HttpClient Http

<PageTitle>Vasco Teixeira - Portfolio</PageTitle>
@if (resume == null) {
	<p>Loading... Please wait.</p>
} else {
	<div class="profile-container pb-5">

		<div class="header-container bg-dark text-white text-center pt-5 pb-4">

			<div class="profile-pic-container pb-3">
				<img class="profile-pic" src="img/pfp.jpg" />
			</div>

			<div class="header-text">

				<div class="profile-name">
					<pre class="mb-1">@resume.Name</pre>
				</div>

				<div class="profile-title">
					<pre>@resume.Title</pre>
				</div>

				<div class="profile-contacts d-flex flex-wrap align-items-center justify-content-center">

					<div class="profile-phone d-flex">
						<i class="bi bi-telephone-fill"></i>
						<pre>@resume.Phone</pre>
					</div>

					<div class="profile-email d-flex">
						<i class="bi bi-envelope-fill"></i>
						<pre>@resume.Email</pre>
					</div>

				</div>

				<div class="profile-socials d-flex align-items-center justify-content-center">
					@foreach (var item in resume.Links) {
						<div class="profile-socials-@item.Name d-flex">
							<i class="@item.Icon"></i>
							<pre>@item.Url</pre>
						</div>
					}
				</div>

				<div class="profile-other">

					<div class="profile-age d-flex justify-content-center">
						<i class="bi bi-person-fill"></i>
						<pre>@(resume.Age)yo</pre>
					</div>

					<div class="profile-location d-flex justify-content-center">
						<i class="bi bi-geo-alt-fill"></i>
						<pre>@resume.Address</pre>
					</div>
				</div>

			</div>
		</div>



		<div class="body-container body-projects-container m-auto d-flex flex-wrap justify-content-center">
			@foreach (var item in resume.Projects) {
				<div class="project-container">
					<strong>@item.Name (@String.Join(", ", item.Technologies )) </strong> <a class="link-dark bi bi-box-arrow-up-right" title="Open in a new tab" target="_blank" href="@item.Link"></a>
					<br/>
					<a class="project-image-link" href="@item.Link">
						<img src="img/Projects/@item.Image" />
					</a>
						<pre>@item.Description</pre>
					</div>
			}

		</div>


	</div>
}


@code {
	private Resume? resume;
	protected override async Task OnInitializedAsync() {
		resume = await Http.GetFromJsonAsync<Resume>("data/resume.json");
	}

}
